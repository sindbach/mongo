# -*- mode: python -*-

Import("env")

env = env.Clone()

env.Library('sha1_block',
    source=[
        'sha1_block.cpp'
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongo/base',
        '$BUILD_DIR/mongo/util/secure_compare_memory',
    ])

env.Library('sha256_block',
    source=[
        'sha256_block.cpp'
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongo/base',
        '$BUILD_DIR/mongo/util/secure_compare_memory',
    ])

if "tom" in env["MONGO_CRYPTO"]:
    tomEnv = env.Clone();
    tomEnv.InjectThirdPartyIncludePaths(libraries=['tomcrypt'])

    tomEnv.Library(
        target='sha_block_tom',
        source=[
            'sha_block_tom.cpp'
        ],
        LIBDEPS=[
            '$BUILD_DIR/mongo/base',
            'sha1_block',
            'sha256_block',
        ],
        LIBDEPS_PRIVATE=[
            '$BUILD_DIR/third_party/shim_tomcrypt',
        ]
    )

env.Library('sha_block_openssl',
    source=[
        'sha_block_openssl.cpp'
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongo/base',
        'sha1_block',
        'sha256_block',
    ])

env.Library('scramauth',
            ['mechanism_scram.cpp'],
            LIBDEPS=['$BUILD_DIR/mongo/base',
                     '$BUILD_DIR/mongo/base/secure_allocator',
                     '$BUILD_DIR/mongo/util/secure_compare_memory',
                     '$BUILD_DIR/mongo/util/secure_zero_memory',
                     'sha_block_${MONGO_CRYPTO}'])

env.CppUnitTest('sha1_block_test',
                ['sha1_block_test.cpp'],
                LIBDEPS=['sha_block_${MONGO_CRYPTO}'])

env.CppUnitTest('sha256_block_test',
                ['sha256_block_test.cpp'],
                LIBDEPS=['sha_block_${MONGO_CRYPTO}'])
